"use strict";(self.webpackChunkprem_docs=self.webpackChunkprem_docs||[]).push([[4292],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=s(a),d=r,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||l;return a?n.createElement(m,i(i({ref:t},c),{},{components:a})):n.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[h]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},88021:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={slug:"perplexity-ai-self-hosted",title:"Build a Perplexity AI clone on Prem",authors:["tiero"],tags:["llm","ai","self-hosted","prem","open-source","perplexity","paperspace","dolly"]},i=void 0,o={permalink:"/blog/perplexity-ai-self-hosted",editUrl:"https://github.com/premAI-io/dev-portal/blog/2023-07-01-perplexity-ai-self-hosted/index.md",source:"@site/blog/2023-07-01-perplexity-ai-self-hosted/index.md",title:"Build a Perplexity AI clone on Prem",description:"Build your own Perplexity AI clone with Prem using the Dolly v2 12B model, self-hosted on Paperspace Cloud virtual server.",date:"2023-07-01T00:00:00.000Z",formattedDate:"July 1, 2023",tags:[{label:"llm",permalink:"/blog/tags/llm"},{label:"ai",permalink:"/blog/tags/ai"},{label:"self-hosted",permalink:"/blog/tags/self-hosted"},{label:"prem",permalink:"/blog/tags/prem"},{label:"open-source",permalink:"/blog/tags/open-source"},{label:"perplexity",permalink:"/blog/tags/perplexity"},{label:"paperspace",permalink:"/blog/tags/paperspace"},{label:"dolly",permalink:"/blog/tags/dolly"}],readingTime:3.06,hasTruncateMarker:!0,authors:[{name:"Marco Argentieri",title:"Bitcoin wizard",url:"https://github.com/tiero",imageURL:"https://github.com/tiero.png",key:"tiero"}],frontMatter:{slug:"perplexity-ai-self-hosted",title:"Build a Perplexity AI clone on Prem",authors:["tiero"],tags:["llm","ai","self-hosted","prem","open-source","perplexity","paperspace","dolly"]},prevItem:{title:"Serving Falcon 7B Instruct with FastAPI and Docker",permalink:"/blog/serving-falcon-7b-fastapi-docker"},nextItem:{title:"Hello Prem!",permalink:"/blog/hello-prem"}},p={authorsImageUrls:[void 0]},s=[{value:"What is Perplexity AI?",id:"what-is-perplexity-ai",level:3},{value:"What is Prem?",id:"what-is-prem",level:3},{value:"Build Perplexity AI with Prem",id:"build-perplexity-ai-with-prem",level:2},{value:"Overview",id:"overview",level:3},{value:"Step 1: Little tweaks to the Clarity AI app",id:"step-1-little-tweaks-to-the-clarity-ai-app",level:3},{value:"1. Clone the app",id:"1-clone-the-app",level:4},{value:"2. Set a random API key",id:"2-set-a-random-api-key",level:4},{value:"3. Set the API endpoint",id:"3-set-the-api-endpoint",level:4},{value:"Step 2: Install Prem on Paperspace",id:"step-2-install-prem-on-paperspace",level:3},{value:"1. Create a machine",id:"1-create-a-machine",level:4},{value:"2. Connect to the instance via SSH",id:"2-connect-to-the-instance-via-ssh",level:4},{value:"3. Install Prem",id:"3-install-prem",level:4},{value:"4. Check the app",id:"4-check-the-app",level:4},{value:"Step 3: Download &amp; Run the model",id:"step-3-download--run-the-model",level:3},{value:"Step 4: Run the app",id:"step-4-run-the-app",level:3},{value:"1. Set the right environment variable",id:"1-set-the-right-environment-variable",level:4},{value:"2. Install the dependencies",id:"2-install-the-dependencies",level:4},{value:"3. Run the frontend",id:"3-run-the-frontend",level:4},{value:"Enjoy!",id:"enjoy",level:3}],c={toc:s},h="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(h,(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("head",null,(0,r.kt)("meta",{name:"twitter:image",content:"./screenshot.png"})),(0,r.kt)("p",null,"Build your own Perplexity AI clone with ",(0,r.kt)("a",{parentName:"p",href:"https://premai.io"},"Prem")," using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dolly v2 12B")," model, self-hosted on ",(0,r.kt)("a",{parentName:"p",href:"https://www.paperspace.com/gpu-cloud"},"Paperspace Cloud")," virtual server."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Clarity AI Screenshot",src:a(88847).Z,width:"1766",height:"1026"})),(0,r.kt)("h3",{id:"what-is-perplexity-ai"},"What is Perplexity AI?"),(0,r.kt)("p",null,"Perplexity AI is a conversational search engine and chatbot that acts as a search engine that scans the internet to provide users with straightforward answers to their questions. It is a great tool for students, researchers, and anyone who wants to learn more about a topic."),(0,r.kt)("h3",{id:"what-is-prem"},"What is Prem?"),(0,r.kt)("p",null,"Prem is a self-hosted AI platform that allows you to test and deploy open-source AI models on your own infrastructure. Prem is open-source and free to use. You can learn more about Prem ",(0,r.kt)("a",{parentName:"p",href:"https://premai.io"},"here"),"."),(0,r.kt)("h2",{id:"build-perplexity-ai-with-prem"},"Build Perplexity AI with Prem"),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"For this tutorial we are going to use the ",(0,r.kt)("strong",{parentName:"p"},"fantastic")," open-source frontend ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley/clarity-ai"},"Clarity AI")," built by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley"},"Mckay Wrigley"),". \ud83d\udc4f Kudos for building such a great tool!"),(0,r.kt)("p",null,"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"ClarityAI")," uses ChatGPT by OpenAI, the integration with Prem it's staightforward as we only need to change the API endpoint and use a random string as API key, to skip the authentication."),(0,r.kt)("p",null,"As infrastructure, we are going to use ",(0,r.kt)("a",{parentName:"p",href:"https://www.paperspace.com/gpu-cloud"},"Paperspace Cloud"),". You can use any other cloud provider or your own server with a NVIDIA GPU."),(0,r.kt)("h3",{id:"step-1-little-tweaks-to-the-clarity-ai-app"},"Step 1: Little tweaks to the Clarity AI app"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u2139\ufe0f ",(0,r.kt)("strong",{parentName:"p"},"skip this step")," You can use directly my own ",(0,r.kt)("inlineCode",{parentName:"p"},"clarity-ai")," fork ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tiero/clarity-ai"},"github.com/tiero/clarity-ai")," that has the changes already applied.")),(0,r.kt)("h4",{id:"1-clone-the-app"},"1. Clone the app"),(0,r.kt)("p",null,"First, we need to clone the Clarity AI repository. For future reference, we are using the follwing commit hash ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley/clarity-ai/commit/5a33db140d253f47da3f07ad1475938c14dfda45"},(0,r.kt)("inlineCode",{parentName:"a"},"5a33db1")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/mckaywrigley/clarity-ai\n")),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"clarity-ai")," project with your editor of choice. I'm using ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code"),"."),(0,r.kt)("h4",{id:"2-set-a-random-api-key"},"2. Set a random API key"),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"components/Search.tsx")," file, at line 16 we need to pre-populate the ",(0,r.kt)("inlineCode",{parentName:"p"},"apiKey")," state with a random string. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const [apiKey, setApiKey] = useState<string>("X".repeat(51));\n')),(0,r.kt)("p",null,"This is needed because we are not going to use the authentication system of OpenAI and Prem is currently exposing the endpoints without authentication."),(0,r.kt)("h4",{id:"3-set-the-api-endpoint"},"3. Set the API endpoint"),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"utils/answer.ts")," file, at line 8 we need to change the API endpoint from OpenAI to be sourced from environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"NEXT_PUBLIC_API_URL")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"`${process.env.NEXT_PUBLIC_API_URL}/v1/chat/completions`\n")),(0,r.kt)("p",null,"Done! \ud83c\udf89"),(0,r.kt)("h3",{id:"step-2-install-prem-on-paperspace"},"Step 2: Install Prem on Paperspace"),(0,r.kt)("p",null,"Create a Paperspace account if you don't have one already, then login to the ",(0,r.kt)("a",{parentName:"p",href:"https://console.paperspace.com/"},"Paperspace Console"),"."),(0,r.kt)("h4",{id:"1-create-a-machine"},"1. Create a machine"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine Type"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"P6000"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"V100-32G"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A100"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A100-80G"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A5000"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A6000")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GPU"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NVIDIA GPU")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine OS"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ML-in-a-Box")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine Storage"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"50 GB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory"),": min 24 GiB")),(0,r.kt)("h4",{id:"2-connect-to-the-instance-via-ssh"},"2. Connect to the instance via SSH"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh paperspace@<your-instance-ip>\n")),(0,r.kt)("h4",{id:"3-install-prem"},"3. Install Prem"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -q https://get.prem.ninja/install.sh -O install.sh; sudo bash ./install.sh\n")),(0,r.kt)("p",null,"This can take a while, so grab an espresso \u2615\ufe0f"),(0,r.kt)("h4",{id:"4-check-the-app"},"4. Check the app"),(0,r.kt)("p",null,"Visit the following URL in your browser: ",(0,r.kt)("inlineCode",{parentName:"p"},"http://<your-instance-ip>:8000")," to confirm the Prem App is up and running."),(0,r.kt)("h3",{id:"step-3-download--run-the-model"},"Step 3: Download & Run the model"),(0,r.kt)("p",null,"From the Prem App, select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dolly v2 12B")," model and click on the ",(0,r.kt)("strong",{parentName:"p"},"dowload")," icon.\nOnce the model is downloaded, click ",(0,r.kt)("strong",{parentName:"p"},"Open")," button. This will start the container and open the chat UI. At this point we don't need the embedded user interface, so we can close it."),(0,r.kt)("h3",{id:"step-4-run-the-app"},"Step 4: Run the app"),(0,r.kt)("p",null,"Now back to the frontend, let's run it locally and connect to our Prem instance."),(0,r.kt)("h4",{id:"1-set-the-right-environment-variable"},"1. Set the right environment variable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export NEXT_PUBLIC_API_URL=http://<your-instance-ip>:8000\n")),(0,r.kt)("h4",{id:"2-install-the-dependencies"},"2. Install the dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,r.kt)("h4",{id:"3-run-the-frontend"},"3. Run the frontend"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,r.kt)("h3",{id:"enjoy"},"Enjoy!"),(0,r.kt)("p",null,"Visit the following URL in your browser: ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000")," to start using your own Perplexity AI clone!"))}u.isMDXComponent=!0},88847:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/screenshot-53f674e6dc0f7f308e1463aceab77a7e.png"}}]);