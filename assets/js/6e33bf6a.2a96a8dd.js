"use strict";(self.webpackChunkprem_docs=self.webpackChunkprem_docs||[]).push([[4318],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62224:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={id:"chat-quickstart",title:"Quick Start with OpenAI Client",sidebar_label:"Quick Start",sidebar_position:2},o="Quick Start with OpenAI Python Client",p={unversionedId:"prem-app/usage/diffuser/chat-quickstart",id:"prem-app/usage/diffuser/chat-quickstart",title:"Quick Start with OpenAI Client",description:"Install and Import all the necessary dependencies",source:"@site/docs/prem-app/usage/diffuser/openai.md",sourceDirName:"prem-app/usage/diffuser",slug:"/prem-app/usage/diffuser/chat-quickstart",permalink:"/docs/prem-app/usage/diffuser/chat-quickstart",draft:!1,editUrl:"https://github.com/premAI-io/dev-portal/blob/main/docs/prem-app/usage/diffuser/openai.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"chat-quickstart",title:"Quick Start with OpenAI Client",sidebar_label:"Quick Start",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"APIs",permalink:"/docs/prem-app/usage/diffuser/api"},next:{title:"Examples",permalink:"/docs/category/examples"}},s={},l=[{value:"Install and Import all the necessary dependencies",id:"install-and-import-all-the-necessary-dependencies",level:3},{value:"Change the base url in order to point to your Prem services",id:"change-the-base-url-in-order-to-point-to-your-prem-services",level:3},{value:"Use OpenAI Client in order to generate the images",id:"use-openai-client-in-order-to-generate-the-images",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start-with-openai-python-client"},"Quick Start with OpenAI Python Client"),(0,a.kt)("h3",{id:"install-and-import-all-the-necessary-dependencies"},"Install and Import all the necessary dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"\n!pip install openai\n!pip install pillow\n\nimport io\nimport base64\nimport openai\n\nfrom PIL import Image\n\n")),(0,a.kt)("h3",{id:"change-the-base-url-in-order-to-point-to-your-prem-services"},"Change the base url in order to point to your Prem services"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nopenai.api_base = "http://localhost:9111/v1"\nopenai.api_key = "random-string"\n\n')),(0,a.kt)("h3",{id:"use-openai-client-in-order-to-generate-the-images"},"Use OpenAI Client in order to generate the images"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nresponse = openai.Image.create(\n    prompt="Iron man portrait, highly detailed, science fiction landscape, art style by klimt and nixeu and ian sprigger and wlop and krenz cushart",\n    n=1,\n    size="512x512"\n)\n\nimage_string = response["data"][0]["b64_json"]\n\nimg = Image.open(io.BytesIO(base64.decodebytes(bytes(image_string, "utf-8"))))\nimg.save("iron_man.jpeg")\n\n')))}d.isMDXComponent=!0}}]);